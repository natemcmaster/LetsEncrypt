<Project>
  <PropertyGroup>
    <Description>Provides API for configuring ASP.NET Core to use Let's Encrypt.org to automaticaly generate HTTPS certificates.</Description>
    <PackageDescription>$(Description)

Let's Encrypt is a free, automated, and open Certificate Authority. When this package is installed and enabled, your web server will
use the Let's Encrypt certificate authority and automatically generate an HTTPS certificate when the server starts up.
It then configures Kestrel to use this certificate for all HTTPS traffic.

This only works with Kestrel, which is the default server configuration for ASP.NET Core projects. Other servers, such as IIS and nginx, are not supported.
    </PackageDescription>
    <PackageTags>lets-encrypt;aspnetcore;https;certificates</PackageTags>
    <Authors>Nate McMaster</Authors>
    <Product>McMaster.AspNetCore.LetsEncrypt</Product>
    <Copyright>Copyright Â© Nate McMaster</Copyright>
    <NeutralLanguage>en-US</NeutralLanguage>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/natemcmaster/LetsEncrypt</PackageProjectUrl>
    <RepositoryUrl>https://github.com/natemcmaster/LetsEncrypt</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DebugType>portable</DebugType>
    <IsPackable>false</IsPackable>
    <WarnOnPackingNonPackableProject>false</WarnOnPackingNonPackableProject>
    <IncludeSymbols>true</IncludeSymbols>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <LangVersion>8.0</LangVersion>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)src\StrongName.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <AzureKeyVaultUrl>https://nmcmaster.vault.azure.net</AzureKeyVaultUrl>
    <AzureKeyVaultClientId>6a27a2da-bb78-4baa-bd2b-150fe89ea039</AzureKeyVaultClientId>
    <AzureKeyVaultClientSecret>$(KEYVAULT_CLIENT_SECRET)</AzureKeyVaultClientSecret>
    <CodeSignCertName>DigiCertCodeSign</CodeSignCertName>
    <NoWarn>$(NoWarn);NU5105</NoWarn>
    <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>
    <IsPackableFalseWarningTask>false</IsPackableFalseWarningTask>

    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <GenerateFullPaths Condition="'$(TERM_PROGRAM)' == 'vscode'">true</GenerateFullPaths>
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <BaseOutputPath>$(MSBuildThisFileDirectory).build\$(MSBuildProjectName)\bin\</BaseOutputPath>
    <BaseIntermediateOutputPath>$(MSBuildThisFileDirectory).build\$(MSBuildProjectName)\obj\</BaseIntermediateOutputPath>
  </PropertyGroup>

  <PropertyGroup>
    <VersionPrefix>0.3.0</VersionPrefix>
    <VersionSuffix>beta</VersionSuffix>
    <IncludePreReleaseLabelInPackageVersion Condition="'$(IsStableBuild)' != 'true'">true</IncludePreReleaseLabelInPackageVersion>
    <BuildNumber Condition=" '$(BuildNumber)' == '' ">$([MSBuild]::ValueOrDefault($(BUILD_NUMBER), 0))</BuildNumber>
    <VersionSuffix>$(VersionSuffix).$(BuildNumber)</VersionSuffix>
    <SourceRevisionId Condition="'$(SourceRevisionId)' == ''">$(BUILD_SOURCEVERSION)</SourceRevisionId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition="'$(IncludePreReleaseLabelInPackageVersion)' == 'true'">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <InformationalVersion Condition="'$(SourceRevisionId)' != ''">$(PackageVersion)+$(SourceRevisionId)</InformationalVersion>
    <PackageDescription Condition="'$(SourceRevisionId)' != ''">$(PackageDescription)

This package was build from source code at $(RepositoryUrl)/tree/$(SourceRevisionId)
    </PackageDescription>
  </PropertyGroup>

  <Import Project="$(MSBuildProjectDirectory)/releasenotes.props"
          Condition="Exists('$(MSBuildProjectDirectory)/releasenotes.props')" />
</Project>
